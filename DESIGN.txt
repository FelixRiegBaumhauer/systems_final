TEAM "GET BACK TO US" - DESIGN DOCUMENT
Sebastian Cain, Noah Fichter, Felix Rieg-Baumhauer

Have you ever wanted to play Connect-4 with your friends when you don’t have internet connection? Or even if you do have internet connection but don’t know how to Google “play connect four online”?
I do, all the time. Just kidding, maybe only occasionally.
But fear no more! We will be creating an offline version of multi-player Connect-4 where two or more players can play one giant game of Connect-4, and every extra player will grow the size of the board.

User Interface
Upon opening the program, the user is asked for the username they want to use and then given an option to create a game or join a game
Create a game:
The user is presented with multiple options, like how many players they want to allow at most, whether the game will be private (in which case a password will be requested), and what they want the game room to be titled.
Join a game:
The user is presented with a list of all public games, as well as an option to enter a room title and password to join a private one
Once a user joins the game, if they are the owner they will have the option to begin it, otherwise they must wait until the owner begins it (the owner will begin it once they believe they have the number of players they want)
Once the game begins, the user whose turn it is will be told to make a move by clicking on a spot on the board (the rest of the users will be told whose turn it is and will wait until it is their turn)
The piece will fall into the slot (maybe some sort of animation), and it will move to the next player’s turn
Once a player gets four in a row diagonally, horizontally, or vertically, they win, and all players will be alerted that the game is over and the winner is <username>.

How will we use the topics of this class:
Allocating memory--this will be used everywhere
Working with files--store information about past games, quickest wins, etc (leaderboard feature?)
Finding information about files (stat and such)--not currentlly used
Processes (forking, exec etc.)--we will be using a server client system to allow multiple users to play at the same time
Signals--allow users to use common exit keystrokes (like Ctrl+C) to exit games instead of quitting the program entirely
Pipes (named and unnamed)--used in server/client system (locally)
Shared memory, semaphores--allows clients to connect with the server (locally)
Networking--allow computers to connect to the server (non-locally)

Data Structures and Algorithms:
At the heart of our connect four game is an 2D array that keeps track of the game
This array lets us keep track of where each piece is, (ie, so we can determine winners, appropriate moves, and so on)
In order to sort and maintain the leaderboards, we would most likelly use a list, and some sort of insert algorithm

Roles:
Networking Guru: Sebastian
GUI master and individual who pieces the project together: Noah
Game developer: Felix

Timeline:
Approximate Due Date: Jan 20th

By Jan 11th, Wed--simple connect four, ie two player only, only accessible via 1 computer
By Jan 15th, Sun--working connect four, with that allows for multiple users on one computer
By Jan 18th, Wed--integrating the game into a server, client structure, that allows for non local users
Project expected to be complete by Jan 18th, 
The remaining two days will be used to add extra features, ie leaderboard etc. 
